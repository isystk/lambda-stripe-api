version: '3'

services:

  dynamodb:
    image: stripe-subscription-api/dynamodb
    container_name: stripe-subscription-api-dynamodb
    build:
      context: ./dynamodb
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    volumes:
      - stripe-subscription-api-dynamodb-store:/home/dynamodblocal/data
    user: root
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath ./data
    networks:
      - lambda-local

  dynamodb-admin:
    container_name: stripe-subscription-api-dynamodb-admin
    image: aaronshaf/dynamodb-admin:latest
    environment:
      - DYNAMO_ENDPOINT=dynamodb:8000
    ports:
      - 8001:8001
    networks:
      - lambda-local

  console:
    image: stripe-subscription-api/console
    container_name: stripe-subscription-api-console
    build:
      context: ./console
      dockerfile: Dockerfile
    tty: true
    environment:
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      AWS_DEFAULT_REGION: ap-northeast-1
      AWS_DEFAULT_OUTPUT: json
    volumes:
      - ../:/app
    networks:
      - lambda-local

  frontend:
    image: stripe-subscription-api/console
    container_name: stripe-subscription-api-frontend
    build:
      context: ./console
      dockerfile: Dockerfile
    tty: true
    restart: always
    volumes:
      - ../frontend/:/app
    ports:
      - 9000:9000
    networks:
      - lambda-local
    command: /bin/bash -c "npm run dev"

  frontend-sb:
    image: stripe-subscription-api/console
    container_name: stripe-subscription-api-frontend-sb
    build:
      context: ./console
      dockerfile: Dockerfile
    tty: true
    restart: always
    volumes:
      - ../frontend/:/app
    ports:
      - 6006:6006
    networks:
      - lambda-local
    command: /bin/bash -c "npm run storybook"

  backend:
    image: stripe-subscription-api/console
    container_name: stripe-subscription-api-backend
    build:
      context: ./console
      dockerfile: Dockerfile
    tty: true
    restart: always
    volumes:
      - ../backend/:/app
    ports:
      - 3000:3000
    networks: 
      - lambda-local
    command: /bin/bash -c "npm run build && npm run start"

  mailhog:
    image: mailhog/mailhog:latest
    container_name: stripe-subscription-api-mailhog
    ports:
      - 8025:8025
      - 25:1025

volumes:
  stripe-subscription-api-dynamodb-store:

networks:
  lambda-local:
    external: true